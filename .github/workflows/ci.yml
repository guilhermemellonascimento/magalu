name: CI

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Install packages
        run: sudo apt-get update && sudo apt-get install --no-install-recommends -y google-chrome-stable curl libjemalloc2 libvips sqlite3

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Install dependencies
        run: |
          gem install bundler
          bundle install --jobs 4 --retry 3

      - name: Set up database
        run: |
          bundle exec rake db:create
          bundle exec rake db:migrate

      - name: Run RSpec tests
        run: |
          bundle exec rspec

  deploy:
      runs-on: ubuntu-latest
      needs: test
      if: success()  # Only run this job if the tests pass

      steps:
        - name: Checkout code
          uses: actions/checkout@v3

        - name: Set up Docker
          uses: docker/setup-buildx-action@v2

        - name: Log in to Docker Hub (or ECR)
          run: |
            echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

        - name: Build Docker image
          run: |
            docker build -t guinascimento/magalu .

        - name: Push Docker image to Docker Hub (or ECR)
          run: |
            docker push guinascimento/magalu

        - name: Set up SSH
          run: |
            mkdir -p ~/.ssh
            echo "$LIGHTSAIL_SSH_KEY" > ~/.ssh/lightsail_key.pem
            chmod 400 ~/.ssh/lightsail_key.pem

        - name: Deploy to AWS Lightsail
          uses: appleboy/ssh-action@v0.1.1
          with:
            host: ${{ secrets.LIGHTSAIL_IP }}  # Public IP of your Lightsail instance
            username: ec2-user  # Use 'ubuntu' for default Lightsail images
            key: ${{ secrets.LIGHTSAIL_SSH_KEY }}  # The SSH private key added as GitHub secret
            script: |
              # Pull the latest Docker image from Docker Hub
              docker pull guinascimento/magalu:latest

              # Stop and remove the existing container
              docker stop rails-app || true
              docker rm rails-app || true

              # Run the new Docker container
              docker run -d --name rails-app -p 80:3000 guinascimento/magalu:latest